import{_ as r,r as n,o as a,c as s,b as t,d as e,e as c,a as l}from"./app-ff2f634e.js";const p={},i=l("<p>正在为您搜索：plugin:react/jsx-runtime的作用是提供JSX语法的运行时支持，使得React组件可以使用JSX语法来描述UI界面。</p><p><code>plugin:react/jsx-runtime</code> 是 React 官方推荐的一种新的 JSX 转换方式。使用它可以帮助减小 JavaScript 文件的大小，优化 React 程序的运行性能。</p><p>在旧的 JSX 转换方式中（例如 Babel 和 TypeScript），我们需要使用 <code>import React from &#39;react&#39;</code> 的语法来使 JSX 语法能够被正确识别和编译。这样会导致每个包含 JSX 语法的文件都会引入 React 库，增加了程序的运行成本和启动时间。</p><p>而使用 <code>plugin:react/jsx-runtime</code> 转换方式时，无需显式引入 React，并且编译后的代码会自动引用 React 中的一些运行时函数（如 <code>jsx</code>、<code>jsxs</code> 等），从而减小了编译后的文件大小，并提高了程序运行效率。</p><p>在新的 JSX 执行时，解析 JSX 元素不再需要从 React 这个命名空间中查找对应的 jsx 函数了。这意味着它可以很好地与 webpack、rollup 和其他工具一起使用，从而更加灵活地管理代码库。</p><p>参考文献：</p>",6),_={href:"https://juejin.cn/post/7112343439731064846",target:"_blank",rel:"noopener noreferrer"},u={href:"https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html",target:"_blank",rel:"noopener noreferrer"};function d(m,x){const o=n("ExternalLinkIcon");return a(),s("div",null,[i,t("ul",null,[t("li",null,[e("["),t("a",_,[e("1"),c(o)]),e("]")]),t("li",null,[e("["),t("a",u,[e("2"),c(o)]),e("]")])])])}const g=r(p,[["render",d],["__file","plugin_react_jsx-runtimezuoyong.html.vue"]]);export{g as default};
