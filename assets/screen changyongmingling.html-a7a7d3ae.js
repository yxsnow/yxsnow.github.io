import{_ as e,o as s,c as n,a as r}from"./app-ff2f634e.js";const t={},c=r("<p>1、安装screen：**yum install -y screen **</p><p>2、运行<strong>screen -ls</strong>可以看到现有的screen的会话。</p><p>3、在screen里运行我们需要的脚本，那么运行完后怎么回到原来的命令行呢（暂时离开，保留screen会话中的任务或程序）？先按**CTRL+a，然后再按d。**这个就是dettach的意思啦，离开screen的session。</p><p>4、恢复screen会话</p><p>当回来时可以再执行执行：<strong>screen -r lnmp</strong> 即可恢复到离开前创建的lnmp会话的工作界面。如果忘记了，或者当时没有指定会话名，可以执行：<strong>screen -ls</strong> screen会列出当前存在的会话列表，</p><p>5、怎么回到这个screen的会话中呢？运行<strong>screen -r &lt;session name&gt;</strong></p><p>6、分屏： Screen分屏，有的时候我们需要边观察一个命令的输出边执行一些操作，开两个CLI是一种解决方式，用screen分屏的功能也能做到。</p><p>a、首先在screen的session中按<strong>CTRL+a，X</strong>，这个时候就会出现第二个屏。</p><p>b、然后按<strong>CTRL+a，tab</strong>可以在两个屏幕之间自由切换。</p><p>c、切换到下个屏幕后，没有命令输入的提示符啊，怎么建立呢？按<strong>CTRL+a c</strong></p><p>7、可以在detach的模式下跑screen的命令，我经常用这个命令去在后台持续抓包。</p><p>就是在主tty中，运行 <strong>screen -dm &lt;你要跑的命令&gt;</strong></p><p>看下图，我运行<strong>screen -dm tcpdump</strong>，然后再去查看screen的 session时，发现多了一个，但是我并没有进入screen的会话中，也就是并没有attach进去。</p><p>8、kill掉一个screen</p><p>（1）、使用screen名字，kill掉。</p><p></p><p>screen -S session_name -X quit</p><p>（2）、激活screen：</p><p></p><p>screen -r session_name</p><p>并利用exit退出并kiil掉session。</p><p>9、关闭screen的会话     执行：<strong>exit</strong> ，会提示：[screen is terminating]，表示已经成功退出screen会话。</p><p>10、远程演示</p><p>首先演示者先在服务器上执行 <strong>screen -S test</strong> 创建一个screen会话，观众可以链接到远程服务器上执行**screen -x test **观众屏幕上就会出现和演示者同步。</p><p>11、常用快捷键</p><p>Ctrl+a c ：在当前screen会话中创建窗口 Ctrl+a w ：窗口列表 Ctrl+a n ：下一个窗口 Ctrl+a p ：上一个窗口 Ctrl+a 0-9 ：在第0个窗口和第9个窗口之间切换</p><p>12、创建一个新窗口     <strong>screen -S name</strong>敲击screen直接启动screen，<strong>使用这条命令可以为screen起一个名字</strong></p><p>13、清楚dead会话，若因为某一个原因其中一个会话死掉，这时screen -list会显示该会话成为dead状态，使用<strong>screen -wipe</strong>命令清楚该会话</p><p>14、用 screen -ls, 显式当前状态为Attached， 但当前没有用户登陆些会话。screen此时正常状态应该为(Detached) 此时用screen -r &lt;session-id&gt;，怎么也登不上。最后找到解决方法：screen -D  -r ＜session-id&gt; -D -r  先踢掉前一用户，再登陆。</p>",29),p=[c];function o(g,a){return s(),n("div",null,p)}const l=e(t,[["render",o],["__file","screen changyongmingling.html.vue"]]);export{l as default};
