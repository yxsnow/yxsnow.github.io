import{_ as e,o as a,c as i,a as n}from"./app-ff2f634e.js";const d={},c=n(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>CRLF、LF 是用来表示文本换行的方式。CR (Car­riage Re­turn) 代表回车，对应字符 <code>\\r</code>，LF (Line Feed) 代表换行，对应字符 <code>\\n</code>。由于历史原因，不同的操作系统文本使用的换行符各不相同。主流的操作系统一般使用 CRLF 或者 LF 作为其文本的换行符。其中，Win­dows 系统使用的是 CRLF, Unix 系统 (包括 Linux、Ma­cOS 近些年的版本) 使用的是 LF。</p><h2 id="修改-git-配置" tabindex="-1"><a class="header-anchor" href="#修改-git-配置" aria-hidden="true">#</a> 修改 Git 配置</h2><h3 id="core-autocrlf" tabindex="-1"><a class="header-anchor" href="#core-autocrlf" aria-hidden="true">#</a> core.autocrlf</h3><p>Git 提供了一个名为 <code>core.autocrlf</code> 的配置，可以自动完成标准化与转换。它的设置方式如下：</p><div class="language-none line-numbers-mode" data-ext="none"><pre class="language-none"><code>git config --global core.autocrlf  [true | input | false]  # 全局设置
git config --local core.autocrlf  [true | input | false] # 针对本项目设置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>true</code> 提交时转换为LF，检出时转换为CRLF</li><li><code>input</code> 提交时转换为LF，检出时不转换</li><li><code>false</code> 提交与检出的代码都保持文件原有的换行符不变（不转换）</li></ul><blockquote><p>CRLF 与 LF 混合的文本文件不受此配置控制。 Git 安装后默认为 false</p></blockquote><p>在文本编辑器可选换行符，且知道如何正确选择的情况下，其实无需进行任何设置。但为了防止在开发非 Win­dows 项目时不小心使用了 CRLF ，可以进行如下设置，这样在提交 (com­mit) 时换行符会转换为 LF。</p><div class="language-none line-numbers-mode" data-ext="none"><pre class="language-none"><code>git config --global core.autocrlf input
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于偶尔会开发 Win­dows 项目的开发者，可以单独对 Win­dows 项目进行设置，来保留 CRLF 。</p><div class="language-none line-numbers-mode" data-ext="none"><pre class="language-none"><code>git config --local core.autocrlf false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="core-safecrlf" tabindex="-1"><a class="header-anchor" href="#core-safecrlf" aria-hidden="true">#</a> core.safecrlf</h3><p>由于没有一个绝对有效的算法来判断一个文件是否为文本，所以 Git 提供了一项禁止 / 警告不可逆转换的配置来防止错误的标准化与转换。它主要是影响到多种换行符混合的文件，我们可以手动将其转换为同一种换行符：</p><div class="language-none line-numbers-mode" data-ext="none"><pre class="language-none"><code>git config --global core.safecrlf [true | false | warn]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>true</code> 禁止提交混合换行符的文本文件(git add 的时候会被拦截，提示异常)</li><li><code>warn</code> 提交混合换行符的文本文件的时候发出警告，但是不会阻止 git add 操作</li><li><code>false</code> 不禁止提交混合换行符的文本文件（默认配置）</li></ul>`,16),o=[c];function l(r,s){return a(),i("div",null,o)}const u=e(d,[["render",l],["__file","git LF CRLF.html.vue"]]);export{u as default};
