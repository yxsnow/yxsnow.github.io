import{_ as i,o as l,c as a,a as t}from"./app-ff2f634e.js";const e={},n=t('<h2 id="_1-display-none" tabindex="-1"><a class="header-anchor" href="#_1-display-none" aria-hidden="true">#</a> <strong>1. display：none；</strong></h2><ul><li>DOM结构：浏览器不会渲染display属性为none的元素，不占据空间，意思就是页面上没有它的一席之地，你在开发者模式中选不中那个元素。</li><li>事件监听：无法进行DOM事件监听。</li><li>性能：动态改变此属性时会引起重排，性能较差。</li><li>继承：不会被子元素继承，因为子元素也不被渲染。</li><li>transtion过渡不支持display。</li></ul><h2 id="_2-visibility-hidden" tabindex="-1"><a class="header-anchor" href="#_2-visibility-hidden" aria-hidden="true">#</a> <a id="t3"></a><a id="2_visibilityhidden_25"></a><strong>2. visibility：hidden；</strong></h2><ul><li>DOM结构：元素被隐藏了，浏览器会渲染visibility属性为hidden的元素，占据空间，意思就是页面上有它的空间，在开发者模式中能选中那个元素。</li><li>事件监听：无法进行DOM事件监听。</li><li>性能：动态改变此属性时会引起重绘，性能较高。</li><li>继承：会被子元素继承，子元素通过设置visibility:visible;来显示自身，使子元素取消自身隐藏。</li><li>transtion：visibility会立即显示，隐藏时会延时。</li></ul><h2 id="_3-opacity-0" tabindex="-1"><a class="header-anchor" href="#_3-opacity-0" aria-hidden="true">#</a> <a id="t4"></a><a id="3_opacity0_34"></a><strong>3. opacity：0；</strong></h2><ul><li>DOM结构：opacity属性值为0时透明度为100%，元素隐藏，占据空间，opacity值为0到1，为1时显示元素。</li><li>事件监听：可以进行DOM事件监听。</li><li>性能：提升为合成层，不会引发重绘，性能较高。</li><li>继承：会被子元素继承，子元素不能通过设置opacity:1;来取消隐藏。。</li><li>transtion：opacity可以延时显示与隐藏。</li></ul>',6),s=[n];function d(o,r){return l(),a("div",null,s)}const h=i(e,[["render",d],["__file","CSSzhiDisplay、VisibilityheOpactitydequbie.html.vue"]]);export{h as default};
