import{_ as t,o as s,c as e,a as i}from"./app-ff2f634e.js";const u="/assets/1132965-20211112180336242-286201_1d386b31d9be49b19-dee9ffbb.png",n="/assets/1132965-20211115104217943-303949_46a95e6158d149ebb-3ed8e639.png",o={},a=i('<h1 id="husky-没有生效" tabindex="-1"><a class="header-anchor" href="#husky-没有生效" aria-hidden="true">#</a> husky 没有生效</h1><p>安装了 husky、lint-staged，并且完成配置。配置如图：</p><img width="375" height="148" src="'+u+'"><p>commit 的时候还是没有效果，没有去执行lint-staged</p><p>原因：husky的新版本和老版本是不一样的，如上图的配置，只适用 4.x</p><p>因此直接安装 4.3.8版本的husky即可生效</p><p>关于新版本的husky，比老版本多了一个动作。</p><p>老版本：安装 ——&gt; 配置</p><p>新版本：安装 ——&gt; 启用 ——&gt; 生成 .husky相关配置</p><p>步骤：</p><ol><li>npm install husky --save-dev 安装</li><li>npx husky install  手动启用husky</li><li>npx husky add .husky/pre-commit &quot;npm run lint-staged&quot;  生成husky配置文件（执行完这一步，根目录会有一个 .husky目录）</li></ol><p>完成这三步便可以正常使用了（前提是package.json里面的lint-staged已经配置好了）</p><p>上面的配置方法有一个<strong>问题</strong>：我们不可能每次 install 之后都需要手动去启用husky，如果开发A配置好了并提交，开发B拉下代码，装完依赖还需要去手动启用。</p><p>解决这个问题的办法，在package.json的里面添加如下配置：</p><p><em>&quot;scripts&quot;: { &quot;prepare&quot;: &quot;husky install&quot; }</em></p><p>它的作用是：在husky安装完之后，自动关联启用。这样除了开发A需要关心husky配置之外，其他后续的开发人员是不需要关心husky配置的。</p><h1 id="husky-lint-staged-完整步骤" tabindex="-1"><a class="header-anchor" href="#husky-lint-staged-完整步骤" aria-hidden="true">#</a> husky lint-staged 完整步骤</h1><ol><li>npm install husky lint-staged prettier --save-dev</li><li>npx husky install 　　       【启用】</li><li>&quot;prepare&quot;: &quot;husky install&quot;  【install后自动启用，这个操作一定要做，否则下次新拉代码还需要手动启用】</li><li>npx husky add .husky/pre-commit &quot;npm run lint-staged&quot;  【创建一个hook，执行完根目录回生成一个.husky目录】</li><li>继续在 scripts 里面添加　　&quot;lint&quot;: &quot;eslint --ext .js,.jsx,.ts,.tsx src&quot;, &quot;lint-staged&quot;: &quot;lint-staged&quot;</li><li>package.json  里面添加 　   &quot;lint-staged&quot;: { &quot;<strong>/*.{js,jsx,ts,tsx}&quot;: &quot;npm run lint&quot;, &quot;</strong>/*.{js,jsx,tsx,ts,less,md}&quot;: [ &quot;prettier --write&quot; ] }</li></ol><p>完成上述操作之后，就可以去试一试了。</p><img width="448" height="305" src="'+n+'">',20),l=[a];function p(h,r){return s(),e("div",null,l)}const k=t(o,[["render",p],["__file","husky wuxiao？ xinbanben husky zenmepeizhi.html.vue"]]);export{k as default};
